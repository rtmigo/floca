# https://github.com/dart-lang/setup-dart

name: test-and-merge

on:
  push:
    branches: [dev]
    paths-ignore:
      - 'example/*'
      - '**.md'
      - '**.txt'

  pull_request:
    branches: [dev]
    paths-ignore:
      - 'example/*'
      - '**.md'
      - '**.txt'

jobs:
  test:
    timeout-minutes: 9
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.2'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get
      - name: Run tests
        run: flutter test

  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze
        run: flutter analyze --fatal-infos
      - name: Publish (dry run)
        run: flutter pub publish --dry-run

  to-staging:
    needs: [test, analyze]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Merge current -> staging
        uses: devmasx/merge-branch@v1.4.0
        with:
          type: now
          target_branch: staging
          github_token: ${{ github.token }}

  to-master:
    if: github.event.head_commit.message=='publish'
    needs: [to-staging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # UPDATE MASTER BRANCH

      - name: Merge to master branch
        uses: devmasx/merge-branch@v1.4.0
        with:
          type: now
          target_branch: master
          github_token: ${{ github.token }}

      # ADD GITHUB RELEASE

      - name: Get version from pubspec.yaml
        run: echo "PKGVER=$(sed -n "s/version://p" pubspec.yaml | xargs)" >> $GITHUB_ENV
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.PKGVER }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  to-pubdev:
    timeout-minutes: 9
    if: github.event.head_commit.message=='publish'
    needs: [to-staging]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.2'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Patching readme.md
        run: ./.github/remove_readme_badges.sh

      - name: Format
        run: dart format .

      - name: Analyze
        run: flutter analyze --fatal-infos

      - name: Setup Pub Credentials
        shell: bash
        env:
          PUB_DEV_PUBLISH_ACCESS_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
          PUB_DEV_PUBLISH_REFRESH_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}
          PUB_DEV_PUBLISH_TOKEN_ENDPOINT: ${{ secrets.PUB_DEV_PUBLISH_TOKEN_ENDPOINT }}
          PUB_DEV_PUBLISH_EXPIRATION: ${{ secrets.PUB_DEV_PUBLISH_EXPIRATION }}
        run: ./.github/pubdev_set_credentials.sh

      - name: Publish
        # 2021-11: Почему-то эта команда продолжает требовать аутентификации,
        # хотя аналогичная версия dart работает...
        run: flutter pub pub publish -f
