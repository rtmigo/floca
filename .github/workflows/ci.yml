# https://github.com/dart-lang/setup-dart

name: test-and-merge

on:
  push:
    branches: [dev]
    paths-ignore:
      - 'example/*'
      - '**.md'
      - '**.txt'

  pull_request:
    branches: [dev]
    paths-ignore:
      - 'example/*'
      - '**.md'
      - '**.txt'

jobs:
  test:
    timeout-minutes: 9
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          #flutter-version: '2.0.3'
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Run tests
        run: flutter test

  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze
        run: flutter analyze --fatal-infos
      - name: Publish (dry run)
        run: flutter pub publish --dry-run

  to-staging:
    needs: [test, analyze]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Merge current -> staging
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: staging
          github_token: ${{ github.token }}

  to-master:
    if: github.event.head_commit.message=='publish'
    needs: [to-staging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # UPDATE MASTER BRANCH

      - name: Merge to master branch
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: master
          github_token: ${{ github.token }}

      # ADD GITHUB RELEASE

      - name: Get version from pubspec.yaml
        run: echo "PKGVER=$(sed -n "s/version://p" pubspec.yaml | xargs)" >> $GITHUB_ENV
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.PKGVER }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  to-pubdev:
    needs: to-master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1

      - name: Setup PubDev credentials
        # data from cat ~/.pub-cache/credentials.json
        run: |
          mkdir -p ~/.pub-cache
          cat <<EOF > ~/.pub-cache/credentials.json
          {
            "accessToken":"${{ secrets.PUBDEV_ACCESS_TOKEN }}",
            "refreshToken":"${{ secrets.PUBDEV_REFRESH_TOKEN }}",
            "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
            "scopes": [ "openid", "https://www.googleapis.com/auth/userinfo.email" ],
            "expiration": 1570721159347
          }
          EOF
      - name:  Patching 'README.md' for PubDev instead of GitHub
        run:
          .github/patch_readme_for_pubdev.sh

      - name: Install dependencies
        run: dart pub get

      - name: Reformat code
        run: dart format .

      - name: Analyze reformatted
        run: dart analyze lib --fatal-infos

#      - name: Unit-tests for reformatted code
#        run: dart test

      - name: Publish package
        run:
          #pub publish --dry-run
          pub publish -f

#    needs: to-master
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: 'stable'
#      - name: Install dependencies
#        run: flutter pub get
#      - name: Format
#        run: dart format .
#      - name: Analyze
#        run: flutter analyze --fatal-infos
#
#      - name: Setup credentials
#        # data from cat ~/.pub-cache/credentials.json
#        run: |
#          mkdir -p ~/.pub-cache
#          cat <<EOF > ~/.pub-cache/credentials.json
#          {
#            "accessToken":"${{ secrets.PUBDEV_ACCESS_TOKEN }}",
#            "refreshToken":"${{ secrets.PUBDEV_REFRESH_TOKEN }}",
#            "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
#            "scopes": [ "openid", "https://www.googleapis.com/auth/userinfo.email" ],
#            "expiration": 1570721159347
#          }
#          EOF
#      - name: Publish
#        run: pub publish -f
